apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    useLibrary 'org.apache.http.legacy'

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.xjp.wonderfulcinema"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
        multiDexEnabled true

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a','x86'
        }

    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    signingConfigs {
        debug {
            keyAlias 'android.keystore'
            keyPassword 'android'
            storeFile file('D:/android/keySign/android.keystore')
            storePassword 'android'
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "4g"
        jumboMode = true
        preDexLibraries = false
        additionalParameters = [
                '--multi-dex',//多分包
                '--set-max-idx-number=60000'//每个包内方法数上限
        ]
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'me.jessyan:arms:2.5.0'
    implementation 'me.jessyan:arms-imageloader-glide:2.5.0'
    implementation 'com.githang:status-bar-compat:0.7'

    //view
    implementation rootProject.ext.dependencies["autosize"]
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude module: 'support-annotations'
    }

    //tools
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]

    //注意 Arms 核心库现在并不会依赖某个 EventBus, 要想使用 EventBus, 还请在项目中自行依赖对应的 EventBus

    //现在支持两种 EventBus, greenrobot 的 EventBus 和畅销书 《Android源码设计模式解析与实战》的作者 何红辉 所作的 AndroidEventBus

    //依赖后 Arms 会自动检测您依赖的 EventBus 并自动注册

    //建议使用 AndroidEventBus, 特别是组件化项目, 原因请看 https://github.com/hehonghui/AndroidEventBus/issues/49

    //这种做法可以让使用者有自行选择三方库的权利, 并且还可以减轻 Arms 的体积
    implementation rootProject.ext.dependencies["androideventbus"]

    //test
    debugImplementation rootProject.ext.dependencies["canary-debug"]
    releaseImplementation rootProject.ext.dependencies["canary-release"]
    testImplementation rootProject.ext.dependencies["canary-release"]
    testImplementation rootProject.ext.dependencies["junit"]

    //design
    implementation rootProject.ext.dependencies["design"]

    //butterknife
    implementation rootProject.ext.dependencies["butterknife"]
    implementation rootProject.ext.dependencies["butterknife-compiler"]
    implementation rootProject.ext.dependencies['rxerrorhandler2']
    implementation rootProject.ext.dependencies['multidex']

    //刷新加载
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.4-7'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.4-7'
    //圆形图片
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    //标题栏控件（https://github.com/wuhenzhizao/android-titlebar）
    implementation 'com.wuhenzhizao:titlebar:1.1.4'
    //工具类开源库
    implementation 'com.blankj:utilcode:1.19.0'
    //动画
    implementation 'com.github.XunMengWinter:CircularAnim:0.3.4'
    //菜单tab
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'

}
